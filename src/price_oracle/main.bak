import Int "mo:base/Int";
import Nat32 "mo:base/Nat32";
import Int64 "mo:base/Int64";
import Text "mo:base/Text";
import Array "mo:base/Array";
import Buffer "mo:base/Buffer";
import Time "mo:base/Time";
import Debug "mo:base/Debug";

actor Price_Oracle {

  public type Record = {
      timestamp : Int;
      date : Text;
      price : Int64;
  };

  var records : [Record] = [];
  var recBuffs = Buffer<Record>(100);
  stable var index : Nat32 = 0;

  // add a new price record
  public func addRecord(_date : Text, _price : Int64) : async () {
    let record : Record = {
      timestamp = Time.now();
      date = _date;
      price = _price;
    };
    // use Buffer and Buffer.append
    records := Array.append<Record>(records : [Record], [record] : [Record]);
    // increment index position
    index += 1;
  };

  // return a price
  public func getPrice(_date : Text) : async Int64 {
    let record : Record;
    record := Array.find<Record>(records : [Record], )
  };




};
